--                                                                                                                      SQL Zoo request

--                                                                                                                      0 SELECT Basics


-- 1 Modify it to show the population of Germany

SELECT population FROM world
  WHERE name = 'Germany'

-- 2 Show the name and the population for 'Sweden', 'Norway' and 'Denmark'.

SELECT name, population FROM world
  WHERE name IN ('Sweden', 'Norway','Denmark');

-- 3 Modify it to show the country and the area for countries with an area between 200,000 and 250,000.

SELECT name, area FROM world
  WHERE area BETWEEN 200000 AND 250000



--                                                                                                                        1 SELECT names


-- 1 Find the country that start with Y

SELECT name FROM world
  WHERE name LIKE 'Y%'


-- 2 Find the countries that end with y

SELECT name FROM world
  WHERE name LIKE 'Y%'



--3 Find the countries that contain the letter x

SELECT name FROM world
  WHERE name LIKE '%X%'


-- 4 Find the countries that end with land

SELECT name FROM world
  WHERE name LIKE '%land'


-- 5 Find the countries that start with C and end with ia

SELECT name FROM world
  WHERE name LIKE 'C%ia'


-- 6 Find the country that has oo in the name

SELECT name FROM world
  WHERE name LIKE '%oo%'

-- 7 Find the countries that have three or more a in the name

SELECT name FROM world
  WHERE name LIKE '%a%a%a%'


-- 8 Find the countries that have "t" as the second character.

SELECT name FROM world
 WHERE name LIKE '_t%'
ORDER BY name

-- 9 Find the countries that have two "o" characters separated by two others.

SELECT name FROM world
 WHERE name LIKE '%o__o%'



-- 10 Find the countries that have exactly four characters.

SELECT name FROM world
 WHERE name LIKE '____'


-- 11 Find the country where the name is the capital city.

SELECT name
  FROM world
 WHERE name = capital

-- 12 Find the country where the capital is the country plus "City".

SELECT name, concat(name, 'town')
  FROM world
 WHERE name LIKE '%ina%'


--                                                                                                           2 SELECT from WORLD Tutorial

-- 1 

SELECT name, continent, population FROM world


-- 2  Show the name for the countries that have a population of at least 200 million. 200 million is 200000000, there are eight zeros.

SELECT name FROM world
WHERE population > 200000000;

-- 3 Give the name and the per capita GDP for those countries with a population of at least 200 million.

Select name,GDP/POPULATION AS GDP FROM World
WHERE population > 200000000;


-- 4 Show the name and population in millions for the countries of the continent 'South America'. Divide the population by 1000000 to get population in millions.

SELECT name, population/1000000 as POP FROM World
WHERE continent ='South America';


-- 5 Show the name and population for France, Germany, Italy

(SELECT name, population FROM world
WHERE name = 'France')
UNION
(SELECT name, population FROM world
WHERE name = 'Italy')
UNION
(SELECT name, population FROM world
WHERE name = 'Germany')

-- 6 Show the countries which have a name that includes the word 'United'

Select name from world
WHERE name like '%United%';

-- 7 Show the countries that are big by area or big by population. Show name, population and area.

SELECT Name, Population, Area FROM World
WHERE Population > 250000000
UNION
SELECT Name, Population, Area FROM World
WHERE area > 3000000;

-- 8 

SELECT name
    , population
    , area
FROM world
WHERE (area > 3000000 AND population <= 250000000)
OR (area <= 3000000 AND population > 250000000)

-- 9 Use the ROUND function to show the values to two decimal places.

SELECT name, population/1000000 AS pop, GDP/1000000000 as PIB FROM WORLD
WHERE Continent ='South America';

--10 Show per-capita GDP for the trillion dollar countries to the nearest $1000.

SELECT NAME, ROUND(GDP/population * 0.001, 0) * 1000 as "PER-CAPITA GDP" 
         FROM WORLD WHERE GDP>= 1000000000000;

-- 12 Show the name and the capital where the first letters of each match. Don't include countries where the name and the capital are the same word.


SELECT name, capital
FROM world
WHERE LEFT(name,1) = LEFT (capital,1) 
AND name <> capital;


-- 13 Find the country that has all the vowels and no spaces in its name.


SELECT name
   FROM world
WHERE name LIKE '%a%'
  AND name LIKE '%e%'
AND name LIKE '%i%'
AND name LIKE '%o%'
AND name LIKE '%u%'
AND name NOT like '% %'


--                                                                                                        3 SELECT from Nobel Tutorial

--1 Winners from 1950

SELECT yr, subject, winner
  FROM nobel
 WHERE yr = 1950;


--2 Show who won the 1962 prize for literature.

SELECT winner
  FROM nobel
 WHERE yr = 1962
   AND subject = 'literature';

-- 3 Show the year and subject that won 'Albert Einstein' his prize.


Select yr, subject
FROM nobel
Where winner LIKE '%EINSTEIN%';


--  4 Recent Peace Prizes


Select winner
FROM nobel
Where subject = 'peace'
AND yr >= 2000;

-- 5 Show all details (yr, subject, winner) of the literature prize winners for 1980 to 1989 inclusive.

Select yr, subject, winner 
FROM nobel
WHERE subject = 'literature'
AND yr BETWEEN 1980 AND 1989;

-- 6 Show all details of the presidential winners:

SELECT * FROM nobel
 WHERE yr > 1900
  AND winner IN ('Theodore Roosevelt',
                  'Woodrow Wilson',
                  'Jimmy Carter',
'Barack Obama');


-- 7 Show the winners with first name John

Select winner 
FROM nobel
Where winner LIKE 'John%';


-- 8 Show the year, subject, and name of physics winners for 1980 together with the chemistry winners for 1984.

Select yr, subject, winner FROM nobel
WHERE (yr = 1980 AND subject = 'physics') OR (yr = 1984 AND subject = 'chemistry')
;



-- 9 Show the year, subject, and name of winners for 1980 excluding chemistry and medicine

Select * FROM nobel
WHERE (yr = 1980) AND subject NOT IN ('Chemistry', 'Medicine');

-- 10 Show year, subject, and name of people who won a 'Medicine' prize in an early year (before 1910, not including 1910) together with winners of a 'Literature' prize in a later year (after 2004, including 2004)

Select * FROM nobel
WHERE yr BETWEEN 1900 AND 1909 And SUBJECT in ('MEDICINE')  OR (yr>= 2004 AND subject = 'literature');


-- 11 Find all details of the prize won by PETER GRÜNBERG

Select * FROM Nobel
Where winner = 'PETER GRÜNBERG';

-- 12 Find all details of the prize won by EUGENE O'NEILL

Select * FROM Nobel
Where winner LIKE '%Eugene O%';


-- 13 List the winners, year and subject where the winner starts with Sir. Show the the most recent first, then by name order.


Select winner, yr, subject FROM Nobel
WHERE winner LIKE 'Sir%'
ORDER BY yr DESC,winner ASC;

-- 14 Show the 1984 winners and subject ordered by subject and winner name; but list chemistry and physics last.


SELECT winner, subject
FROM nobel
WHERE yr=1984
ORDER BY subject IN ('Physics','Chemistry'), subject, winner;



--                                                                                                                        4 SELECT within SELECT Tutorial


--1 List each country name where the population is larger than that of 'Russia'.

Select name FROM world
WHERE population > 146424729;

--2 Show the countries in Europe with a per capita GDP greater than 'United Kingdom'.

SELECT name
FROM world
WHERE continent = 'Europe'
AND gdp/population > (
  SELECT gdp/population
  FROM world
  WHERE name = 'United Kingdom');

-- 3 Neighbours of Argentina and Australia List the name and continent of countries in the continents containing either Argentina or Australia. Order by name of the country.

SELECT name,continent
FROM world
Where continent ='Americas' OR (continent = 'Oceania')
ORDER BY name ASC;


-- 4 Which country has a population that is more than United Kingdom but less than Germany? Show the name and the population.

Select name, population
From world 
Where population > 67026292 AND population < 84270625 ;



-- 5 Show the name and the population of each country in Europe. Show the population as a percentage of the population of Germany.

SELECT 
  name, 
  CONCAT(ROUND((population*100)/(SELECT population 
                                 FROM world WHERE name='Germany'), 0), '%')
FROM world
WHERE population IN (SELECT population
                     FROM world
                     WHERE continent='Europe')       


-- 6 Which countries have a GDP greater than every country in Europe? [Give the name only.] (Some countries may have NULL gdp values)

select name  
from world x 
where gdp > all (select gdp from world y where continent = 'Europe' and gdp > 0);


-- 7 Find the largest country (by area) in each continent, show the continent, the name and the area:

SELECT continent, name, area 
  FROM world
 WHERE area IN (SELECT MAX(area) 
                  FROM world 
                 GROUP BY continent);



-- 8. List each continent and the name of the country that comes first alphabetically.

Select  x.continent, x.name
From world x
Where x.name <= ALL (select y.name from world y where x.continent=y.continent)
ORDER BY name;

-- 9 Find the continents where all countries have a population <= 25000000. Then find the names of the countries associated with these continents. Show name, continent and population.

Select name, continent, population 
from world w
WHERE NOT EXISTS (
SELECT *
FROM world nx
WHERE nx.continent = w.continent
AND nx.population > 25000000) ;


-- 10 Three time bigger

sum(CASE WHEN country.population > neighbours.population * 3 THEN 1 ELSE 0 END)
(Group by country !)
SELECT countryName 
FROM
(
    SELECT sum(CASE WHEN country.population > neighbours.population * 3 THEN 1 ELSE 0 END) as okNeighbours,
           count(*) as totalNeighbours
           country.name as countryName
    FROM bbc country
        INNER JOIN bbc neighbours
            ON country.region = neighbours.region
            AND country.name != neighbours.name
    GROUP BY country.name
)
WHERE totalNeighbours = okNeighbours;



                                                                                                                5 SUM and COUNT


-- 1 Show the total population of the world.

SELECT SUM(population)
FROM world;

-- 2 List all the continents - just once each.

Select distinct continent from world;


-- 3 Give the total GDP of Africa

Select sum(gdp) from world
where continent = 'Africa';


-- 4 How many countries have an area of at least 1000000

Select Count(name) from world
Where area > 1000000;

-- 5 What is the total population of ('Estonia', 'Latvia', 'Lithuania')

Select Sum(population) from world
WHERE (name = 'Estonia')
OR (name = 'Latvia')
OR (name =  'Lithuania');


-- 6 For each continent show the continent and number of countries.

SELECT continent, COUNT(name)
  FROM world
 GROUP BY continent;

-- 7 For each continent show the continent and number of countries with populations of at least 10 million.


SELECT continent,COUNT(name) FROM world
WHERE population > 10000000
Group by continent;

-- 8 List the continents that have a total population of at least 100 million.

Select Distinct continent from world
Where population > 100000000
ORDER By continent;

--                                                                                                            6 JOIN



-- 1 Modify it to show the matchid and player name for all goals scored by Germany. To identify German players, check for: teamid = 'GER'


SELECT matchid, player FROM goal 
  WHERE teamid LIKE '%GER%'


-- 2 Show id, stadium, team1, team2 for just game 1012

SELECT DISTINCT id,stadium,team1,team2
  FROM game
LEFT JOIN goal
on game.id = goal.matchid
WHERE matchid = 1012;

-- 3 Modify it to show the player, teamid, stadium and mdate for every German goal.

SELECT player,teamid, stadium, mdate
  FROM game JOIN goal ON (id=matchid)
WHERE TEAMID = 'GER';



-- 4 Show the team1, team2 and player for every goal scored by a player called Mario player LIKE 'Mario%'

SELECT 	team1, 	team2, player
  FROM game JOIN goal ON (id=matchid)
WHERE player LIKE 'Mario%';



-- 5 Show player, teamid, coach, gtime for all goals scored in the first 10 minutes gtime<=10

SELECT player, teamid,coach, gtime
  FROM goal JOIN eteam on (teamid=id)
WHERE gtime<=10;


-- 6 List the dates of the matches and the name of the team in which 'Fernando Santos' was the team1 coach.

 Select mdate, teamname FROM game
game JOIN eteam ON (team1=eteam.id)
WHERE coach = 'Fernando Santos';


-- 7 List the player for every goal scored in a game where the stadium was 'National Stadium, Warsaw'

SELECT player FROM game
JOIN goal on (id = matchid)
WHERE stadium = 'National Stadium, Warsaw' ;

-- 8 Instead show the name of all players who scored a goal against Germany.

SELECT  DISTINCT player
  FROM game JOIN goal ON matchid = id 
   WHERE ( teamid != 'GER' AND (team1='GER' OR team2='GER' )) ;


-- 9 Show teamname and the total number of goals scored.

SELECT teamname, COUNT(player) goals_scored
FROM eteam JOIN goal ON eteam.id = goal.teamid
GROUP BY teamname;

-- 10 Show the stadium and the number of goals scored in each stadium.

SELECT stadium, COUNT(player) goals_scored
FROM game
JOIN goal ON game.id = goal.matchid
GROUP BY stadium;


--                                                                    7 MORE JOIN 


-- 1 List the films where the yr is 1962 [Show id, title]

SELECT id, title
 FROM movie
 WHERE yr=1962;


-- 2 When was Citizen Kane released?

SELECT yr
 FROM movie
 WHERE title = 'Citizen Kane' ;

-- 3 List all of the Star Trek movies, include the id, title and yr (all of these movies include the words Star Trek in the title). Order results by year.

Select id,title,yr from movie
Where title LIKE '%Star Trek%'
ORDER by yr;


-- 4 What id number does the actor 'Glenn Close' have?

select id from actor
Where name = 'Glenn Close';


-- 5 What is the id of the film 'Casablanca'

SELECT id from movie
WHERE title = 'Casablanca';

-- 6 Use movieid=11768, (or whatever value you got from the previous question)

Select name from 
movie JOIN casting ON movie.id=movieid
         JOIN actor   ON actorid=actor.id
WHERE movie.id = 11768;


-- 7 Obtain the cast list for the film 'Alien'

Select name from movie
JOIN casting ON movie.id=movieid
JOIN actor ON actorid=actor.id
WHERE title ='Alien'


-- 8 List the films in which 'Harrison Ford' has appeared


Select title from movie
JOIN casting ON movie.id=movieid
JOIN actor ON actorid=actor.id
WHERE name ='Harrison Ford'


-- 9 List the films where 'Harrison Ford' has appeared - but not in the starring role. [Note: the ord field of casting gives the position of the actor. If ord=1 then this actor is in the starring role]


Select title from movie
JOIN casting ON movie.id=movieid
JOIN actor ON actorid=actor.id
WHERE name ='Harrison Ford' AND ord !=1;


-- 10. List the films together with the leading star for all 1962 films.

Select title,name from movie
JOIN casting ON movie.id=movieid
JOIN actor ON actorid=actor.id
WHERE yr = 1962 AND ord = 1;

-- 11 Which were the busiest years for 'Rock Hudson', show the year and the number of movies he made each year for any year in which he made more than 2 movies.

SELECT yr,COUNT(title) FROM
  movie JOIN casting ON movie.id=movieid
        JOIN actor   ON actorid=actor.id
WHERE name='Rock Hudson'
GROUP BY yr
HAVING COUNT(title) > 2;


-- 12 List the film title and the leading actor for all of the films 'Julie Andrews' played in.

SELECT title,name
FROM movie,casting,actor
WHERE movieid = movie.id
AND actorid = actor.id
AND ord = 1
AND movieid IN 
(SELECT movieid FROM casting,actor
WHERE actorid= actor.id
AND name='Julie Andrews')
;


13 Obtain a list, in alphabetical order, of actors who've had at least 15 starring roles.

Select name 
FROM casting JOIN actor
ON actorid=actor.id
WHERE ord=1
GROUP BY name
HAVING COUNT(movieid)>=15;


-- 14 List the films released in the year 1978 ordered by the number of actors in the cast, then by title.

Select title,COUNT(actorid)
FROM casting,movie
WHERE yr = 1978
AND movieid = movie.id
GROUP BY title
ORDER BY COUNT(actorid) DESC;


-- 15 List all the people who have worked with 'Art Garfunkel'.


Select Distinct d.name
FROM actor d join casting a ON (a.actorid=d.id)
JOIN casting b ON (a.movieid=b.movieid)
JOIN actor c ON (b.actorid=c.id
AND c.name='Art Garfunkel')
WHERE d.id != c.id;



--                                                                            8 Using Null

-- 1 List the teachers who have NULL for their department.

Select name FROM teacher 
WHERE dept IS NULL;

-- 2 Note the INNER JOIN misses the teachers with no department and the departments with no teacher.

SELECT teacher.name, dept.name
 FROM teacher INNER JOIN dept
           ON (teacher.dept=dept.id);

-- 3 Use a different JOIN so that all teachers are listed.

SELECT teacher.name, dept.name
 FROM teacher LEFT JOIN dept
           ON (teacher.dept=dept.id);

-- 4 Use a different JOIN so that all departments are listed.

SELECT teacher.name, dept.name
 FROM teacher RIGHT JOIN dept
           ON (teacher.dept=dept.id);

-- 5 Use COALESCE to print the mobile number. Use the number '07986 444 2266' if there is no number given. Show teacher name and mobile number or '07986 444 2266'

SELECT name, COALESCE(mobile, '07986 444 2266')
  FROM teacher;


-- 6 Use the COALESCE function and a LEFT JOIN to print the teacher name and department name. Use the string 'None' where there is no department.

SELECT teacher.name, COALESCE(dept.name, 'None')
  FROM teacher
 LEFT JOIN dept ON (dept = dept.id);

-- 7 Use COUNT to show the number of teachers and the number of mobile phones.

Select Count(id), Count(mobile) From teacher;


-- 8 Use COUNT and GROUP BY dept.name to show each department and the number of staff. Use a RIGHT JOIN to ensure that the Engineering department is listed.

Select dept.name, Count(teacher.name) From teacher
RIGHT JOIN dept ON (dept = dept.id)
GROUP BY dept.name;

-- 9 Use CASE to show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2 and 'Art' otherwise

SELECT teacher.name, CASE WHEN dept = 1 OR dept = 2 THEN 'Sci' ELSE 'Art' END FROM teacher;



-- 10 Use CASE to show the name of each teacher followed by 'Sci' if the teacher is in dept 1 or 2, show 'Art' if the teacher's dept is 3 and 'None' otherwise.

SELECT teacher.name, CASE WHEN dept =1 OR dept = 2 THEN 'Sci' WHEN dept = 3 THEN 'Art' ELSE 'None' END From teacher;

--                                                                        9 SELF JOIN



-- 1 How many stops are in the database.

Select Count(*) FROM stops;

-- 2 Find the id value for the stop 'Craiglockhart'

Select id from stops
WHERE name ='Craiglockhart'

-- 3 Give the id and the name for the stops on the '4' 'LRT' service.

SELECT id, name
FROM stops
JOIN route ON stops.id = route.stop
WHERE num  = 4
AND Company = 'LRT';

-- 4 The query shown gives the number of routes that visit either London Road (149) or Craiglockhart (53). Run the query and notice the two services that link these stops have a count of 2. Add a HAVING clause to restrict the output to these two routes.

SELECT company, num, COUNT(*)
FROM route 
WHERE stop = 149 OR stop = 53
GROUP BY num
HAVING COUNT (*) = 2;


-- 5 Execute the self join shown and observe that b.stop gives all the places you can get to from Craiglockhart, without changing routes. Change the query so that it shows the services from Craiglockhart to London Road.

SELECT a.company, a.num, a.stop, b.stop
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
WHERE a.stop=53
AND b.stop = 149;


-- 6 The query shown is similar to the previous one, however by joining two copies of the stops table we can refer to stops by name rather than by number. Change the query so that the services between 'Craiglockhart' and 'London Road' are shown. If you are tired of these places try 'Fairmilehead' against 'Tollcross'

SELECT a.company, a.num, stopa.name, stopb.name
FROM route a JOIN route b ON
  (a.company=b.company AND a.num=b.num)
  JOIN stops stopa ON (a.stop=stopa.id)
  JOIN stops stopb ON (b.stop=stopb.id)
WHERE stopa.name='Craiglockhart'
AND stopb.name='London Road';


-- 7 Give a list of all the services which connect stops 115 and 137 ('Haymarket' and 'Leith')

SELECT Distinct a.company, a.num
FROM route a 
JOIN route b ON a.num = b.num
WHERE a.stop = 115
AND b.stop = 137;


-- 8 Give a list of the services which connect the stops 'Craiglockhart' and 'Tollcross'

Select a.company, a.num
From route a
JOIN route b on (a.num = b.num)
Join stops stopa ON (a.stop = stopa.id)
Join stops stopb ON (b.stop = stopb.id)
Where stopa.name = 'Craiglockhart' 
and stopb.name = 'Tollcross'; 

-- 9 Give a distinct list of the stops which may be reached from 'Craiglockhart' by taking one bus, including 'Craiglockhart' itself, offered by the LRT company. Include the company and bus no. of the relevant services.

Select distinct stopb.name, b.company , b.num
FROM route a
JOIN route b ON (a.num = b.num AND a.company = b.company)
JOIN stops stopa ON (a.stop = stopa.id)
JOIN stops stopb ON (b.stop = stopb.id)
WHERE stopa.name = 'Craiglockhart';


-- 10 Find the routes involving two buses that can go from Craiglockhart to Lochend.
Show the bus no. and company for the first bus, the name of the stop for the transfer,
and the bus no. and company for the second bus.

SELECT S.num, S.company, S.name, T.num, T.company 
FROM 
    (SELECT DISTINCT a.num, a.company, sb.name 
     FROM route a JOIN route b ON (a.num = b.num and a.company = b.company) 
                  JOIN stops sa ON sa.id = a.stop 
                  JOIN stops sb ON sb.id = b.stop 
     WHERE sa.name = 'Craiglockhart' AND sb.name <> 'Craiglockhart'
)S

JOIN

    (SELECT x.num, x.company, sy.name 
     FROM route x JOIN route y ON (x.num = y.num and x.company = y.company) 
                  JOIN stops sx ON sx.id = x.stop 
                  JOIN stops sy ON sy.id = y.stop 
     WHERE sx.name = 'Lochend' AND sy.name <> 'Lochend'
    )T

ON (S.name = T.name)
ORDER BY S.num, S.name, T.num;
